{"version":3,"sources":["components/TimerApp/UserInput.js","components/TimerApp/Timer.js","components/Universal/Form.js","components/ToDoApp/Item.js","components/ToDoApp/ToDoApp.js","Nav.js","components/API/Card.js","components/Universal/Info.js","App.js","components/Universal/Home.js","components/TimerApp/TimerApp.js","components/API/APIApp.js","serviceWorker.js","index.js","photos/todo.jpg","photos/done-list.jpg","components/Universal/Small-Projects.svg"],"names":["Form","props","FormChange","event","setState","target","name","value","handleSumbit","preventDefault","Date","state","date","className","onSubmit","this","onChange","type","icon","Component","Timer","timeLeft","arrayOfTime","TransitionGroup","component","map","time","index","CSSTransition","in","timeout","classNames","key","useState","formInfo","setFormInfo","autoComplete","undefined","AddItem","alert","Item","item","completeItem","deleteItem","onClick","Todo","items","CompleteItem","DeleteItem","src","todo","DoneList","doneItems","doneListJpg","Nav","to","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","size","Card","img","setSrc","usePalette","data","loading","error","useEffect","style","background","vibrant","number","Info","info","setShowInfo","enter","exit","unmountOnExit","library","add","faClipboardList","faInfo","faClock","faPlusCircle","faCheckCircle","faMinusCircle","faGlobeAfrica","faCalendarDay","paths","id","path","flexDirection","Svg","countDownDate","setCountDownDate","calculateTimeLeft","difference","days","Math","floor","hours","minutes","seconds","setTimeLeft","timer","setTimeout","clearTimeout","Object","keys","push","ShowTime","setItems","setDoneItems","filter","oldItems","country","setData","foundData","setBool","a","fetch","then","response","json","appear","marginBottom","ceil","probability","countries","country_id","App","showInfo","basename","exact","match","Boolean","window","location","hostname","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.a0a17468.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default class Form extends Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state={\r\n            date: ''\r\n    }\r\n}\r\n    FormChange=(event)=>{\r\n        this.setState({[event.target.name]: event.target.value})\r\n     }\r\n     handleSumbit = (event) => {\r\n       event.preventDefault()\r\n       this.props.Date(this.state.date)\r\n       \r\n     }\r\n    \r\n     render(){\r\n\r\n        return(\r\n    <form className=\"form-inline\" onSubmit={this.handleSumbit}>\r\n        \r\n        \r\n        <input className=\"item\" name=\"date\" onChange={this.FormChange} type=\"date\"></input>\r\n        <button className=\"form-button flex fa-secondary\" type=\"submit\">\r\n        <FontAwesomeIcon  icon=\"calendar-day\"></FontAwesomeIcon>\r\n        </button>\r\n    </form>\r\n        )\r\n     }\r\n}","import React, { useState } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\nexport const Timer = ({timeLeft, arrayOfTime})=>{\r\n\r\n    \r\n   \r\n     \r\n \r\n    return (  \r\n      <TransitionGroup component='div' className=\"row\">\r\n        {arrayOfTime.map((time, index) =>\r\n        <CSSTransition \r\n        in={timeLeft!=0}\r\n        timeout={500}\r\n        classNames=\"item\">\r\n           <div key={index} className=\"time-container\">\r\n           <p>{timeLeft[time]}</p>\r\n           <span>{time}</span>\r\n           </div>\r\n           </CSSTransition>\r\n        )}\r\n        </TransitionGroup>)\r\n\r\n    \r\n}","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nexport default function Form(props){\r\nconst [formInfo, setFormInfo] = useState()\r\n\r\n   const FormChange=(event)=>{\r\n    const { value} = event.target\r\n    setFormInfo(value)\r\n     }\r\n   const handleSumbit = (event) => {\r\n       event.preventDefault()\r\n       if(formInfo!=undefined)\r\n       props.AddItem(formInfo)\r\n      else\r\n       alert('Please enter a value')\r\n     }\r\n\r\n     return(\r\n        <form autoComplete=\"off\" className=\"form-inline\" onSubmit={handleSumbit}>\r\n        \r\n        <input className=\"item\" onChange={FormChange} name=\"text\" type=\"text\"></input>\r\n        \r\n      <button className=\"form-button flex fa-secondary\" type=\"submit\">\r\n        <FontAwesomeIcon  icon=\"plus-circle\"></FontAwesomeIcon>\r\n        </button>\r\n        \r\n       \r\n    </form>\r\n     )\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nexport const Item = ({item, completeItem, deleteItem}) => {\r\n\r\n    \r\n    return(\r\n        <div className=\"form-inline\">\r\n            \r\n            <div className=\"todo-list-item\">\r\n              <div>{item}</div>  \r\n            <span onClick={completeItem} >\r\n                <FontAwesomeIcon className=\"fa-secondary icon\" icon=\"check-circle\" />\r\n            </span>\r\n            <span onClick={deleteItem} >\r\n                <FontAwesomeIcon className=\"fa-third icon\" icon=\"minus-circle\" />\r\n            </span>\r\n            </div>\r\n          \r\n        </div>\r\n        \r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Form from '../Universal/Form'\r\nimport {Item} from './Item'\r\nimport './ToDo.css'\r\nimport todo from '../../photos/todo.jpg'\r\nimport doneListJpg from '../../photos/done-list.jpg'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { DownloadComp } from '../Universal/Download';\r\n\r\n\r\n\r\nexport const ToDoApp=()=>{\r\n\r\n    const [items, setItems] = useState([])\r\n    const [doneItems, setDoneItems] = useState([])\r\n\r\nconst CompleteItem = (item) =>{\r\n    DeleteItem(item)\r\n    setDoneItems(oldItems =>[...oldItems,item])\r\n}\r\n\r\nconst AddItem = (item) =>{\r\n    setItems(oldItems =>[...oldItems,item])\r\n}\r\nconst DeleteItem=(name)=>{\r\n    setItems(items.filter(item => item!== name));\r\n}\r\n\r\n\r\n    return(\r\n        <div className=\"overlay flex\">\r\n           \r\n            <div className=\"home-title\">\r\n                 <h2> <span>To Do List</span></h2>\r\n                 </div>\r\n            <Form AddItem={AddItem}/>\r\n            \r\n            <div className=\"row\">\r\n            <Todo items={items} DeleteItem={DeleteItem} CompleteItem={CompleteItem}/>\r\n            <DoneList doneItems={doneItems}/>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst Todo = ({items, CompleteItem, DeleteItem}) =>{\r\n    return(\r\n        <div className=\"glass\">\r\n        <div className=\"glass-img-container\">\r\n            <span>To Do</span>\r\n            <img src={todo}/>\r\n        </div>\r\n        <div className=\"column todo-list\">\r\n    <TransitionGroup component={null}>\r\n        { items.map((item, index )=> (\r\n    <CSSTransition \r\n    key={index}\r\n    timeout={1000}\r\n    classNames=\"item\">\r\n    <Item name={item} item={item} completeItem={()=>CompleteItem(item)} deleteItem={()=>DeleteItem(item)} />\r\n    </CSSTransition>))}\r\n    </TransitionGroup>\r\n    </div>\r\n   \r\n    </div>\r\n    )\r\n}\r\nconst DoneList = ({doneItems}) =>{\r\n    return(\r\n        <div className=\"glass\">\r\n        <div className=\"glass-img-container\">\r\n            <span>Done List</span>\r\n            <img src={doneListJpg}/>\r\n        </div>\r\n       \r\n        <div className=\"column todo-list\">\r\n        \r\n    <TransitionGroup component={null}>\r\n        {doneItems&&( doneItems.map((item, index )=> (\r\n    <CSSTransition \r\n    key={index}\r\n    timeout={index}\r\n    classNames=\"item\">\r\n        <div className=\"form-inline\">\r\n    <div className=\"todo-list-item\">{item}</div>\r\n    </div>\r\n    </CSSTransition>)))}\r\n    </TransitionGroup>\r\n    </div>\r\n    </div>\r\n    \r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default function Nav(){\r\n    return(\r\n       \r\n  <nav className=\"navbar\">\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"logo\">\r\n      <Link className=\"nav-link\" to=\"/\">\r\n          <span className=\"link-text logo-text\">Small Projects</span>\r\n          <svg\r\n            aria-hidden=\"true\"\r\n            focusable=\"false\"\r\n            data-prefix=\"fad\"\r\n            data-icon=\"angle-double-right\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 448 512\"\r\n            className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\r\n          >\r\n            <g className=\"fa-group\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\r\n                className=\"fa-secondary\"\r\n              ></path>\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\r\n                className=\"fa-primary\"\r\n              ></path>\r\n            </g>\r\n          </svg>\r\n        </Link>\r\n      </li>\r\n    \r\n      <li className=\"nav-item\">\r\n      <Link className=\"nav-link\" to=\"/timer\">\r\n        <FontAwesomeIcon size=\"2x\" className=\"fa-primary svg-inline--fa fa-clock fa-w-16\" icon=\"clock\"/>\r\n     \r\n          <span className=\"link-text\">Timer</span>\r\n        \r\n        </Link>\r\n      </li>\r\n      \r\n      <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/todo\">\r\n          <FontAwesomeIcon size=\"2x\" className=\"svg-inline--fa fa- fa-th-list w-16 fa-primary\" icon=\"clipboard-list\"/>\r\n         \r\n          <span className=\"link-text\">To Do</span>\r\n     \r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/api\">\r\n          <FontAwesomeIcon size=\"2x\" className=\"svg-inline--fa fa- fa-th-list w-16 fa-primary\" icon=\"globe-africa\"/>\r\n         \r\n          <span className=\"link-text\">API Nationality</span>\r\n     \r\n        </Link>\r\n      </li>\r\n\r\n\r\n      \r\n    </ul>\r\n  </nav>\r\n  \r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {usePalette} from 'react-palette'\r\nimport './Card-style.css'\r\n\r\n\r\n\r\n\r\nexport default function Card(props){\r\n\r\n    const [src, setSrc] = useState(props.img)\r\n    const { data, loading, error } = usePalette(props.img)\r\n \r\n    useEffect(()=>{\r\n        setSrc(props.img)\r\n    })\r\n    return(\r\n        <div className=\"card\">\r\n           \r\n                <img src={src}/>\r\n                <div className=\"card-overlay\">\r\n                    <div className=\"circle\" style={{background:data.vibrant}}></div>\r\n                    <div className=\"card-container\">\r\n                        <h2>\r\n                           {props.name}\r\n                        </h2>\r\n                        <div className=\"color-flex\">\r\n                        <h2>\r\n                           {props.number} %\r\n                            </h2>\r\n                       \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default function Info({info, setShowInfo}){\r\n\r\n   \r\n   \r\n    return(\r\n        <div className=\"info\">\r\n            <CSSTransition\r\n            timeout={{ enter:1000, exit: 300 }}\r\n            in={info}\r\n            classNames=\"right-fade\">\r\n            <div className=\"done-item\" onClick={()=>setShowInfo(false)} >\r\n                <FontAwesomeIcon icon=\"info\"/>\r\n            </div>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n            unmountOnExit\r\n            timeout={{  enter:1000, exit: 300 }}\r\n            in={!info}\r\n            classNames=\"right-fade\">\r\n                <div  onClick={()=>setShowInfo(true)} className=\"info-overlay \">\r\n            <span >\r\n                <h3><FontAwesomeIcon icon=\"clock\"/> Timer</h3>\r\n            The timer application does what you think it would, it takes a date from the\r\n            user and gives the countdown to that date in real time.\r\n            <h3><FontAwesomeIcon icon=\"clipboard-list\"/> To-do list</h3>\r\n            A to-do list where you can add items the list, delete them, or add them do your\r\n            done-items list.\r\n            <h3><FontAwesomeIcon icon=\"globe-africa\"/> nationalize.io</h3>\r\n            Nationalize.io predicts the nationality of a person given their name. \r\n            \r\n            </span>\r\n            </div>\r\n            </CSSTransition>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport './style.css'\r\nimport TimerApp from './components/TimerApp/TimerApp';\r\nimport { BrowserRouter as Router,HashRouter,Route, Switch} from \"react-router-dom\";\r\nimport {ToDoApp} from './components/ToDoApp/ToDoApp';\r\nimport Nav from './Nav'\r\nimport Home from './components/Universal/Home'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faClipboardList,faInfo, faClock, faPlusCircle, faCheckCircle, faMinusCircle, faGlobeAfrica, faCalendarDay } from '@fortawesome/free-solid-svg-icons'\r\nimport APIApp from './components/API/APIApp';\r\nimport Info from './components/Universal/Info';\r\nimport {  CSSTransition } from 'react-transition-group';\r\nlibrary.add(faClipboardList,faInfo, faClock, faPlusCircle, faCheckCircle, faMinusCircle, faGlobeAfrica, faCalendarDay)\r\n\r\nconst paths = [\r\n  {\r\n    id:1, path:'/', Component: Home\r\n  },\r\n  {\r\n    id:2, path:'/timer', Component: TimerApp\r\n  },\r\n  {\r\n    id:3, path:'/todo', Component: ToDoApp\r\n  },\r\n  {\r\n    id:4, path:'/api', Component: APIApp\r\n  },\r\n]\r\n\r\nfunction App() {\r\n\r\n  const [showInfo, setShowInfo] = useState(true);\r\n  return (\r\n    <HashRouter\r\n    basename='/'>\r\n    <div className=\"App\">\r\n    <Nav/>\r\n      <header className=\"App-header\">\r\n     \r\n     \r\n            {paths.map( ({id, path, Component}) =>\r\n          <Route key={id} exact path={path}>\r\n          {({ match }) => (\r\n            <CSSTransition\r\n              in={match != null}\r\n              timeout={300}\r\n              classNames=\"page\"\r\n              unmountOnExit\r\n            >\r\n          <div className=\"background\">\r\n          <Info info={showInfo} setShowInfo={setShowInfo}/>\r\n                 {showInfo&& <Component />}  \r\n                  </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n            )}\r\n      \r\n  \r\n\r\n      </header>\r\n    </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport Svg from './Small-Projects.svg'\r\n\r\nexport default function Home(){\r\n    return(\r\n        <div style={{flexDirection:'row'}} className=\"overlay flex\">\r\n             <div className=\"home-title\">\r\n                 <h2>A <span>Small Projects</span> portfolio</h2>\r\n                 \r\n                 </div>\r\n                 <img className=\"home-icon\" src={Svg} />\r\n             <div className=\"home-circle\">\r\n            \r\n               \r\n            </div>\r\n               \r\n              \r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport UserInput from './UserInput'\r\nimport {Timer} from './Timer'\r\nimport './TimerApp-style.css'\r\n\r\nexport default function TimerApp(){\r\n\r\n  \r\nconst [countDownDate , setCountDownDate] = useState(0)\r\n\r\n  const calculateTimeLeft = () => {\r\n   \r\n      let difference = new Date(countDownDate) - new Date()\r\n    let timeLeft = {};\r\n    if (difference > 0) {\r\n\r\n      \r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n    \r\n    return timeLeft;\r\n  };\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n  \r\nuseEffect(() => {\r\n \r\n    const timer=setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n     \r\n    }, 1000);\r\n    // Clear timeout if the component is unmounted\r\n    return () => clearTimeout(timer);\r\n  })\r\n\r\n  var arrayOfTime = []\r\n  Object.keys(timeLeft).map((key, index) => {\r\n    const myItem = arrayOfTime.push(key)\r\n\r\n  })\r\n\r\n        \r\n        return(\r\n           \r\n               <div className=\"overlay flex\">\r\n                  <div className=\"home-title\">\r\n                 <h2><span>Timer</span></h2>\r\n                 </div>\r\n                <UserInput Date={setCountDownDate}/>\r\n                <Timer ShowTime={countDownDate} arrayOfTime={arrayOfTime}  timeLeft={timeLeft}/>\r\n                </div>\r\n         \r\n           \r\n        )\r\n    \r\n}","import React, { useEffect, useState } from 'react'\r\nimport Form from '../Universal/Form'\r\nimport ReactCountryFlag from \"react-country-flag\"\r\nimport {countries} from 'country-data';\r\nimport Card from './Card'\r\nimport './Card-style.css'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { Title } from '../Universal/Title';\r\n\r\n\r\n\r\n\r\nexport default function APIApp(){\r\n\r\n    const [data,setData] = useState({name:'', country:[]});\r\n    const [foundData, setBool]= useState(false)\r\n   \r\n  async function Get(name){\r\n   \r\n      try{\r\n      let response = await fetch(`https://api.nationalize.io?name=${name}`)\r\n      .then(response => response.json())\r\n      .then(data => setData(data));\r\n        setBool(true)\r\n      }\r\n      catch{\r\n\r\n      }\r\n  }\r\nconst ReturnFlag=(country)=>{\r\n return(\r\n  <ReactCountryFlag countryCode={country.country_id} svg/>\r\n )\r\n}\r\n\r\n    return(\r\n        <div id=\"api\" className=\"overlay flex\">\r\n             <div className=\"home-title\">\r\n                 <h2><span>nationalize.io</span></h2>\r\n                 </div>\r\n           <Form AddItem={Get}/>\r\n           <div>\r\n               <CSSTransition in={foundData} timeout={{ appear: 1000, enter:1000, exit: 300 }} classNames=\"item\">\r\n               <h3 className=\"name-style\">{data.name}</h3>\r\n               </CSSTransition>\r\n\r\n        <TransitionGroup style={{marginBottom:'100px'}} className=\"flex\">\r\n           {data.country.map((country, index )=>\r\n           <CSSTransition \r\n           key={index}\r\n           timeout={{enter:500,exit:300}}\r\n           classNames=\"item\">\r\n  <Card number={Math.ceil(country.probability * 100)} name={countries[country.country_id].name} img={`http://catamphetamine.gitlab.io/country-flag-icons/3x2/${country.country_id}.svg`} />\r\n  </CSSTransition>  )}\r\n  </TransitionGroup>   \r\n            </div>\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/todo.40944277.jpg\";","module.exports = __webpack_public_path__ + \"static/media/done-list.454f3d4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Small-Projects.8dbdeaa0.svg\";"],"sourceRoot":""}