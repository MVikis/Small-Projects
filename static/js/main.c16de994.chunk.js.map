{"version":3,"sources":["components/TimerApp/UserInput.js","components/TimerApp/Timer.js","components/TimerApp/TimerApp.js","components/Universal/Form.js","components/ToDoApp/Item.js","components/ToDoApp/ToDoApp.js","Nav.js","components/Universal/Home.js","components/API/Card.js","components/API/APIApp.js","components/Universal/Info.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","FormChange","event","setState","target","name","value","handleSumbit","preventDefault","Date","state","date","className","onSubmit","this","onChange","type","icon","Component","Timer","timerComponents","Object","keys","timeLeft","forEach","interval","push","CSSTransition","in","timeout","classNames","days","hours","minutes","seconds","TimerApp","useState","countDownDate","setCountDownDate","calculateTimeLeft","difference","Math","floor","setTimeLeft","useEffect","timer","setTimeout","clearTimeout","style","height","ShowTime","formInfo","setFormInfo","autoComplete","AddItem","Item","item","onClick","completeItem","deleteItem","ToDoApp","items","setItems","Class","setClass","doneItems","setDoneItems","DeleteItem","filter","console","log","length","TransitionGroup","map","index","key","oldItems","component","CompleteItem","Nav","to","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","size","Home","justifyContent","fontSize","margin","Card","img","src","setSrc","usePalette","data","loading","error","background","vibrant","number","APIApp","country","setData","foundData","setBool","a","fetch","then","response","json","appear","enter","exit","marginBottom","ceil","probability","countries","country_id","Info","showButton","setShowButton","showMessage","setShowMessage","unmountOnExit","onEnter","onExited","library","add","faThList","faClock","faPlusCircle","faCheckCircle","faMinusCircle","faGlobeAfrica","faCalendarDay","App","path","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c16de994.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default class Form extends Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state={\r\n            date: ''\r\n    }\r\n}\r\n    FormChange=(event)=>{\r\n        this.setState({[event.target.name]: event.target.value})\r\n     }\r\n     handleSumbit = (event) => {\r\n       event.preventDefault()\r\n       this.props.Date(this.state.date)\r\n       \r\n     }\r\n    \r\n     render(){\r\n\r\n        return(\r\n    <form className=\"form-inline\" onSubmit={this.handleSumbit}>\r\n        \r\n        \r\n        <input className=\"item\" name=\"date\" onChange={this.FormChange} type=\"date\"></input>\r\n        <button className=\"form-button flex fa-secondary\" type=\"submit\">\r\n        <FontAwesomeIcon  icon=\"calendar-day\"></FontAwesomeIcon>\r\n        </button>\r\n    </form>\r\n        )\r\n     }\r\n}","import React, { useState } from 'react'\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n\r\nexport default function Timer(props){\r\n\r\n    const timerComponents = [];\r\n    Object.keys(props.timeLeft).forEach((interval) => {\r\n      if (!props.timeLeft[interval]) {\r\n        return;\r\n      }\r\n    \r\n      timerComponents.push(\r\n        <span>\r\n          {props.timeLeft[interval]} {interval}{\" \"}\r\n        </span>\r\n      );\r\n    });\r\n   \r\n     \r\n    \r\n    return (  \r\n    <CSSTransition\r\n      in={props.timeLeft!=0}\r\n      timeout={1000}\r\n      classNames=\"item\">\r\n        <div className=\"row\">\r\n        \r\n    <div>\r\n    <p>{props.timeLeft.days}</p>\r\n    <span>days</span>\r\n    </div>\r\n   \r\n    <div>\r\n    <p>{props.timeLeft.hours}</p>\r\n    <span>hours</span>\r\n    </div>\r\n     <div>\r\n    <p>{props.timeLeft.minutes}</p>\r\n    <span>minutes</span>\r\n    </div>\r\n     <div>\r\n    <p>{props.timeLeft.seconds}</p>\r\n    <span>seconds</span>\r\n    </div>\r\n \r\n\r\n</div>\r\n</CSSTransition>\r\n    )\r\n\r\n    \r\n}","import React, {useState, useEffect} from 'react';\r\nimport UserInput from './UserInput'\r\nimport Timer from './Timer'\r\nimport './TimerApp-style.css'\r\n\r\n\r\n\r\nexport default function TimerApp(){\r\n\r\n  \r\nconst [countDownDate , setCountDownDate] = useState(0)\r\n\r\n  const calculateTimeLeft = () => {\r\n   \r\n      let difference = new Date(countDownDate) - new Date()\r\n    let timeLeft = {};\r\n    if (difference > 0) {\r\n\r\n      \r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n    \r\n    return timeLeft;\r\n  };\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n  \r\nuseEffect(() => {\r\n \r\n    const timer=setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n     \r\n    }, 1000);\r\n    // Clear timeout if the component is unmounted\r\n    return () => clearTimeout(timer);\r\n  })\r\n\r\n  \r\n\r\n        \r\n        return(\r\n           <div className=\"background\">\r\n               <div className=\"overlay\" style={{height:'100vh'}} >\r\n               \r\n               <UserInput Date={setCountDownDate}/>\r\n               \r\n                <Timer ShowTime={countDownDate} timeLeft={timeLeft}/>\r\n                \r\n                </div>\r\n         \r\n           </div>\r\n        )\r\n    \r\n}","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nexport default function Form(props){\r\nconst [formInfo, setFormInfo] = useState()\r\n\r\n   const FormChange=(event)=>{\r\n    const { value} = event.target\r\n    setFormInfo(value)\r\n     }\r\n   const handleSumbit = (event) => {\r\n       event.preventDefault()\r\n      props.AddItem(formInfo)\r\n       \r\n     }\r\n\r\n     return(\r\n        <form autoComplete=\"off\" className=\"form-inline\" onSubmit={handleSumbit}>\r\n        \r\n        <input className=\"item\" onChange={FormChange} name=\"text\" type=\"text\"></input>\r\n        \r\n      <button className=\"form-button flex fa-secondary\" type=\"submit\">\r\n        <FontAwesomeIcon  icon=\"plus-circle\"></FontAwesomeIcon>\r\n        </button>\r\n        \r\n       \r\n    </form>\r\n     )\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nexport default function Item(props){\r\n\r\n    \r\n    return(\r\n        <div className=\"form-inline\">\r\n            \r\n            <div className=\"item\">{props.item}</div>\r\n            <button onClick={props.completeItem} className=\"form-button flex \">\r\n                <FontAwesomeIcon className=\"fa-secondary icon\" icon=\"check-circle\" />\r\n            </button>\r\n            <button onClick={props.deleteItem} className=\"form-button sec flex \">\r\n                <FontAwesomeIcon className=\"fa-third icon\" icon=\"minus-circle\" />\r\n            </button>\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Form from 'C:/Users/lisel/source/repos/MVikis/Date-Timer/date-timer/src/components/Universal/Form.js'\r\nimport Item from './Item'\r\nimport './ToDo.css'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nexport default function ToDoApp(){\r\n\r\n    const [items, setItems] = useState([])\r\n    const [Class, setClass] = useState('done-items done-items-close')\r\n    const [doneItems, setDoneItems] = useState([])\r\n\r\nconst CompleteItem = (item) =>{\r\n    DeleteItem(item)\r\n    setDoneItems(oldItems =>[...oldItems,item])\r\n}\r\n\r\nconst AddItem = (item) =>{\r\n    setItems(oldItems =>[...oldItems,item])\r\n}\r\nconst DeleteItem=(name)=>{\r\n    setItems(items.filter(item => item!== name));\r\n}\r\nconst ToggleClass=()=>{\r\n    console.log('hej')\r\nif(Class==='done-items done-items-close')\r\n    setClass('done-items done-items-open')\r\n\r\nelse setClass('done-items done-items-close')\r\n}\r\n\r\n    return(\r\n        <div className=\"background\" >\r\n             <div className={Class}>\r\n        <FontAwesomeIcon onClick={ToggleClass} className=\"fa-secondary icon span-svg\" icon=\"check-circle\" />\r\n                <span>{doneItems.length}\r\n            </span>\r\n   \r\n        <TransitionGroup className=\"flex\">\r\n        { doneItems.map((item, index)=>\r\n        (<CSSTransition \r\n            key={index}\r\n            timeout={1000}\r\n            classNames=\"item\">\r\n        <div className=\"done-item\" key={index}>{item}</div>\r\n        </CSSTransition>))}\r\n        </TransitionGroup>\r\n           </div>\r\n      \r\n        <div className=\"overlay\">\r\n            <div>\r\n            <h3 >To Do List</h3>\r\n            <Form AddItem={AddItem}/>\r\n            </div>\r\n           \r\n            \r\n            <TransitionGroup component={null}>\r\n                { items.map((item, index )=> (\r\n            <CSSTransition \r\n            key={index}\r\n            timeout={1000}\r\n            classNames=\"item\">\r\n            <Item name={item} item={item} completeItem={()=>CompleteItem(item)} deleteItem={()=>DeleteItem(item)} />\r\n            </CSSTransition>))}\r\n            </TransitionGroup>\r\n           \r\n           \r\n            </div>\r\n          \r\n            </div>\r\n       \r\n        \r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default function Nav(){\r\n    return(\r\n       \r\n  <nav className=\"navbar\">\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"logo\">\r\n      <Link className=\"nav-link\" to=\"/smallprojects\">\r\n          <span className=\"link-text logo-text\">Small Projects</span>\r\n          <svg\r\n            aria-hidden=\"true\"\r\n            focusable=\"false\"\r\n            data-prefix=\"fad\"\r\n            data-icon=\"angle-double-right\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 448 512\"\r\n            className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\r\n          >\r\n            <g className=\"fa-group\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\r\n                className=\"fa-secondary\"\r\n              ></path>\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\r\n                className=\"fa-primary\"\r\n              ></path>\r\n            </g>\r\n          </svg>\r\n        </Link>\r\n      </li>\r\n    \r\n      <li className=\"nav-item\">\r\n      <Link className=\"nav-link\" to=\"/timer\">\r\n        <FontAwesomeIcon size=\"2x\" className=\"fa-primary svg-inline--fa fa-clock fa-w-16\" icon=\"clock\"/>\r\n     \r\n          <span className=\"link-text\">Timer</span>\r\n        \r\n        </Link>\r\n      </li>\r\n      \r\n      <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/todo\">\r\n          <FontAwesomeIcon size=\"2x\" className=\"svg-inline--fa fa- fa-th-list w-16 fa-primary\" icon=\"th-list\"/>\r\n         \r\n          <span className=\"link-text\">To Do</span>\r\n     \r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/api\">\r\n          <FontAwesomeIcon size=\"2x\" className=\"svg-inline--fa fa- fa-th-list w-16 fa-primary\" icon=\"globe-africa\"/>\r\n         \r\n          <span className=\"link-text\">API Nationality</span>\r\n     \r\n        </Link>\r\n      </li>\r\n\r\n\r\n      \r\n    </ul>\r\n  </nav>\r\n  \r\n  )\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default function Home(){\r\n    return(\r\n        <div style={{height:'100vh', justifyContent:'flex-start'}} className=\"overlay\">\r\n             <div className=\"home-circle\">\r\n                <FontAwesomeIcon   className=\"fa-primary home-icon\" icon=\"clock\"/>\r\n                <FontAwesomeIcon   className=\"fa-primary home-icon\"  icon=\"th-list\"/>\r\n                <FontAwesomeIcon  className=\"fa-primary home-icon\" icon=\"globe-africa\"/>\r\n            </div>\r\n               <h3 style={{fontSize:'10vh',margin:'0'}}>Small Projects</h3>\r\n              \r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {usePalette} from 'react-palette'\r\nimport './Card-style.css'\r\n\r\n\r\n\r\n\r\nexport default function Card(props){\r\n\r\n    const [src, setSrc] = useState(props.img)\r\n    const { data, loading, error } = usePalette(props.img)\r\n \r\n    useEffect(()=>{\r\n        setSrc(props.img)\r\n    })\r\n    return(\r\n        <div className=\"card\">\r\n           \r\n                <img src={src}/>\r\n                <div className=\"card-overlay\">\r\n                    <div className=\"circle\" style={{background:data.vibrant}}></div>\r\n                    <div className=\"card-container\">\r\n                        <h2>\r\n                           {props.name}\r\n                        </h2>\r\n                        <div className=\"color-flex\">\r\n                        <h2>\r\n                           {props.number} %\r\n                            </h2>\r\n                       \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Form from 'C:/Users/lisel/source/repos/MVikis/Date-Timer/date-timer/src/components/Universal/Form.js'\r\nimport ReactCountryFlag from \"react-country-flag\"\r\nimport {countries} from 'country-data';\r\nimport Card from './Card'\r\nimport './Card-style.css'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\n\r\n\r\nexport default function APIApp(){\r\n\r\n    const [data,setData] = useState({name:'', country:[]});\r\n    const [foundData, setBool]= useState(false)\r\n   \r\n  async function Get(name){\r\n   \r\n      try{\r\n      let response = await fetch(`https://api.nationalize.io?name=${name}`)\r\n      .then(response => response.json())\r\n      .then(data => setData(data));\r\n        setBool(true)\r\n      }\r\n      catch{\r\n\r\n      }\r\n  }\r\nconst ReturnFlag=(country)=>{\r\n return(\r\n  <ReactCountryFlag countryCode={country.country_id} svg/>\r\n )\r\n}\r\nconsole.log(data)\r\n    return(\r\n        <div className=\"overlay\">\r\n            <h3 >Name Nationalize</h3>\r\n           <Form AddItem={Get}/>\r\n           \r\n        \r\n\r\n           \r\n           <div>\r\n               <CSSTransition in={foundData} timeout={{ appear: 1000, enter:1000, exit: 300 }} classNames=\"item\">\r\n               <h3 className=\"name-style\">{data.name}</h3>\r\n               </CSSTransition>\r\n           \r\n           \r\n        <TransitionGroup style={{marginBottom:'100px'}} className=\"flex\">\r\n           {data.country.map((country, index )=>\r\n           <CSSTransition \r\n    \r\n           key={index}\r\n           timeout={{enter:500,exit:300}}\r\n           classNames=\"item\">\r\n  <Card number={Math.ceil(country.probability * 100)} name={countries[country.country_id].name} img={`http://catamphetamine.gitlab.io/country-flag-icons/3x2/${country.country_id}.svg`} />\r\n  </CSSTransition>  )}\r\n  </TransitionGroup>\r\n         \r\n            </div>\r\n        \r\n       \r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default function Info(){\r\n\r\n    const [showButton, setShowButton] = useState(true);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n   \r\n   \r\n    return(\r\n        <div className=\"info\">\r\n            <CSSTransition\r\n            timeout={{ enter:1000, exit: 300 }}\r\n            in={showButton}\r\n            \r\n            classNames=\"right-fade\">\r\n            <div className=\"done-item\" onClick={()=>setShowMessage(true)} >Info</div>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n            unmountOnExit\r\n            onEnter={() => setShowButton(false)}\r\n            onExited={() => setShowButton(true)}\r\n            timeout={{  enter:1000, exit: 300 }}\r\n            in={showMessage}\r\n            classNames=\"right-fade\">\r\n            <span onClick={()=>setShowMessage(false)} >\r\n                <h3><FontAwesomeIcon icon=\"clock\"/> Timer</h3>\r\n            The timer application does what you think it would, it takes a date from the\r\n            user and gives the countdown to that date in real time.\r\n            <h3><FontAwesomeIcon icon=\"th-list\"/> To-do list</h3>\r\n            A to-do list where you can add items the list, delete them, or add them do your\r\n            done-items list.\r\n            <h3><FontAwesomeIcon icon=\"globe-africa\"/> nationalize.io</h3>\r\n            Nationalize.io predicts the nationality of a person given their name. \r\n            \r\n            </span>\r\n            </CSSTransition>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport './style.css'\nimport TimerApp from './components/TimerApp/TimerApp';\nimport { BrowserRouter as Router,Route,Redirect} from \"react-router-dom\";\nimport ToDoApp from './components/ToDoApp/ToDoApp';\nimport Nav from './Nav'\nimport Home from './components/Universal/Home'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faThList, faClock, faPlusCircle, faCheckCircle, faMinusCircle, faGlobeAfrica, faCalendarDay } from '@fortawesome/free-solid-svg-icons'\nimport APIApp from './components/API/APIApp';\nimport Info from './components/Universal/Info';\n\n\n\nlibrary.add( faThList, faClock, faPlusCircle, faCheckCircle, faMinusCircle, faGlobeAfrica, faCalendarDay)\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Nav/>\n      <header className=\"App-header\">\n      \n       <Route path=\"/smallprojects\" component={Home}/>\n      <Route path=\"/timer\" component={TimerApp}/>\n      <Route path=\"/todo\" component={ToDoApp}/>\n      <Route path=\"/api\" component={APIApp}/>\n     \n     <Info/> \n\n      </header>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}